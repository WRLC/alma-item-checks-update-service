name: Test Dependabot Updates

on:
  pull_request:
    branches:
      - feature/dependency-updates
    types: [opened, synchronize, reopened]

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  TF_WORKING_DIR: ${{ secrets.TF_WORKING_DIR }}

jobs:
  terraform-outputs:
    if: github.actor == 'dependabot[bot]' && contains(github.event.pull_request.labels.*.name, 'python')
    runs-on: ubuntu-latest
    outputs:
      python_version: ${{ steps.get_outputs.outputs.function_app_python_version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Get Terraform outputs
      id: get_outputs
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ secrets.TF_STATE_RG }}" \
          -backend-config="storage_account_name=${{ secrets.TF_STATE_SA }}" \
          -backend-config="container_name=${{ secrets.TF_STATE_CONTAINER }}" \
          -backend-config="key=${{ secrets.TF_STATE_KEY }}"

        PYTHON_VERSION=$(terraform output -raw function_app_python_version)
        echo "function_app_python_version=$PYTHON_VERSION" >> $GITHUB_OUTPUT

  test-imports:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs: terraform-outputs

    env:
      PYTHON_VERSION: ${{ needs.terraform-outputs.outputs.python_version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Configure private repository authentication
      run: poetry config http-basic.wrlc-python pat ${{ secrets.AZURE_DEVOPS_PAT }}

    - name: Install project
      run: poetry install --no-interaction

    - name: Run pytest
      run: poetry run pytest
