#file: noinspection UndefinedAction,UndefinedParamsPresent
name: Promote Stage to Production

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  promote-to-production:
    runs-on: ubuntu-latest
    environment: production

    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_USE_OIDC: true
      TF_WORKING_DIR: ./terraform
      TF_STATE_RG: ${{ secrets.TF_STATE_RG }}
      TF_STATE_SA: ${{ secrets.TF_STATE_SA }}
      TF_STATE_CONTAINER: ${{ secrets.TF_STATE_CONTAINER }}
      TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ env.ARM_CLIENT_ID }}
        tenant-id: ${{ env.ARM_TENANT_ID }}
        subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Get Terraform outputs
      working-directory: terraform
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ env.TF_STATE_RG }}" \
          -backend-config="storage_account_name=${{ env.TF_STATE_SA }}" \
          -backend-config="container_name=${{ env.TF_STATE_CONTAINER }}" \
          -backend-config="key=${{ env.TF_STATE_KEY }}"

        FUNCTION_APP_NAME=$(terraform output -raw function_app_name)
        RG_NAME=$(terraform output -raw function_app_resource_group_name)
        STAGE_SLOT_NAME=$(terraform output -raw stage_slot_name)

        echo "FUNCTION_APP_NAME=$FUNCTION_APP_NAME" >> "$GITHUB_ENV"
        echo "RG_NAME=$RG_NAME" >> "$GITHUB_ENV"
        echo "STAGE_SLOT_NAME=$STAGE_SLOT_NAME" >> "$GITHUB_ENV"

    - name: Swap deployment slots
      run: |
        echo "Swapping stage and production slots..."
        echo "Function app: ${{ env.FUNCTION_APP_NAME }}"
        echo "Resource group: ${{ env.RG_NAME }}"

        az functionapp deployment slot swap \
          --name "${{ env.FUNCTION_APP_NAME }}" \
          --resource-group "${{ env.RG_NAME }}" \
          --slot "${{ env.STAGE_SLOT_NAME }}" \
          --target-slot "production"
